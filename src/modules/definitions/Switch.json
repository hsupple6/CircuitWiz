{
  "module": "Switch",
  "gridX": 3,
  "gridY": 1,
  "background": "#8B4513",
  "css": "border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.3);",
  "category": "switches",
  "description": "Interactive toggle switch with input, output terminals, and clickable switch body",
  "grid": [
    {
      "x": 0,
      "y": 0,
      "background": "#4A90E2",
      "css": "border-radius: 8px 0 0 8px; border: 2px solid #2563EB; border-right: none; color: white; font-weight: bold; text-align: center; display: flex; align-items: center; justify-content: center;",
      "isConnectable": true,
      "type": "INPUT",
      "pin": "IN",
      "isPowered": false,
      "isClickable": false,
      "isPowerable": true,
      "isGroundable": false,
      "voltage": 0,
      "current": 0
    },
    {
      "x": 1,
      "y": 0,
      "background": "#8B4513",
      "css": "border-radius: 0; border: 2px solid #654321; border-left: none; border-right: none; color: white; font-weight: bold; text-align: center; display: flex; align-items: center; justify-content: center; cursor: pointer;",
      "isConnectable": false,
      "type": "SWITCH_BODY",
      "pin": "SW",
      "isPowered": false,
      "isClickable": true,
      "isPowerable": false,
      "isGroundable": false,
      "voltage": 0,
      "current": 0,
      "isOn": false
    },
    {
      "x": 2,
      "y": 0,
      "background": "#E24A4A",
      "css": "border-radius: 0 8px 8px 0; border: 2px solid #DC2626; border-left: none; color: white; font-weight: bold; text-align: center; display: flex; align-items: center; justify-content: center;",
      "isConnectable": true,
      "type": "OUTPUT",
      "pin": "OUT",
      "isPowered": false,
      "isClickable": false,
      "isPowerable": true,
      "isGroundable": false,
      "voltage": 0,
      "current": 0
    }
  ],
  "behavior": {
    "onClick": "// Toggle switch state and pass power from input to output\nconst inputCell = context.getCellByPosition(0, 0);\nconst outputCell = context.getCellByPosition(2, 0);\nconst switchBody = context.getCellByPosition(1, 0);\n\nif (switchBody) {\n  // Toggle switch state\n  const currentState = switchBody.isOn || false;\n  const newState = !currentState;\n  \n  // Update switch body state\n  context.updateCellPower(1, 0, newState);\n  \n  // If input is powered and switch is on, power the output\n  if (inputCell && inputCell.isPowered && newState) {\n    context.updateCellPower(2, 0, true);\n    console.log('Switch ON - Power flowing from input to output');\n  } else {\n    context.updateCellPower(2, 0, false);\n    console.log('Switch OFF - No power flow');\n  }\n}"
  }
}
